{"version":3,"sources":["@traceur/generated/TemplateParser/5368","@traceur/generated/TemplateParser/5367","@traceur/generated/TemplateParser/5366","@traceur/generated/TemplateParser/5371","@traceur/generated/TemplateParser/5369","@traceur/generated/TemplateParser/5374","angular2/src/core/compiler/pipeline/proto_view_builder.js","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/24","@traceur/generated/TemplateParser/13","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/26"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yNAAoB,UAAS,SAAQ;;;;;;;;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,gBAAoB,KAAG,UAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,sBAAoB,KAAG,gBAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,kBAAoB,KAAG,YAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,qBAAoB,KAAG,eAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,qBAAoB,KAAG,eAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,wBAAoB,KAAG,kBAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;uBGFY,CAAA,SAAQ,AAAC,sBCAjC,SAAS,QAAO;AACN,AAAI,UAAA,mBCsBP,SAAM,iBAAe,CAGd,eAAc,CAAmB,CAAA,iBAAkC,CAAG;AC1BpF,eAAK,cAAc,CAAA,eAAA,CD0BW,gBAAc,CAAA,kBAAA,CAAqB,kBAAgB,CC1B3C,CAAA;ACAtC,AF2BI,wBE3BU,iBAAiB,AAAC,kBAAkB,KAAK,MAAmB,CF2B/D;AACP,aAAG,mBAAmB,EAAI,kBAAgB,CAAC;AAC3C,aAAG,gBAAgB,EAAI,gBAAc,CAAC;QD5BQ,AC6BhD,CD7BiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AC8B5C,gBAAM,CAAN,UAAQ,MAAK,CAAkB,CAAA,OAAM,CAAkB,CAAA,OAAqB;AChC9E,iBAAK,cAAc,CAAA,MAAA,CDgCF,eAAa,CAAA,QAAA,CAAW,eAAa,CAAA,QAAA,CAAW,eAAa,CChCxC,CAAA;ADiC9B,cAAA,CAAA,kBAAiB,EAAI,KAAG,CAAC;AAC7B,eAAI,OAAM,WAAW,CAAG;AAClB,gBAAA,CAAA,mBAAkB,EAAI,CAAA,IAAG,gBAAgB,0BAA2B,AAAC,CAAA,OAAM,CAAC,CAAC;AACjF,+BAAiB,EAAI,IAAI,UAAQ,AAAE,CAAA,OAAM,QAAQ,CAAG,oBAAkB,CACpE,CAAA,IAAG,mBAAmB,CAAG,CAAA,IAAG,oBAAoB,AAAE,CAAA,MAAK,CAAC,CAAC,CAAC;AAE5D,iBAAI,SAAS,AAAC,CAAA,MAAK,CAAC,CAAG;AACrB,mBAAI,SAAQ,AAAE,CAAA,MAAK,uBAAuB,gBAAgB,CAAC,CAAG;AAC5D,sBAAM,IAAI,cAAa,AAAC,CAAA,6CAA4C,CAAC,CAAC;gBACxE;AAAA,AACA,qBAAK,uBAAuB,gBAAgB,EAAI,mBAAiB,CAAC;AAKlE,mBAAI,SAAQ,AAAE,CAAA,MAAK,iBAAiB,CAAC,CAAG;AACtC,2BAAS,QAAQ,AAAE,CAAA,MAAK,iBAAiB,GAAI,SAAA,UAAS,CAAG,CAAA,OAAM,CAAM;AACnE,qCAAiB,aAAc,AAAC,CAAA,OAAM,CAAG,WAAS,CAAC,CAAC;kBACtD,EAAC,CAAC;gBACJ;AAAA,cACF;AAAA,YACF,KAAO,KAAI,SAAQ,AAAE,CAAA,MAAK,CAAC,CAAG;AAC5B,+BAAiB,EAAI,CAAA,MAAK,mBAAmB,CAAC;YAChD;AAAA,AAMA,eAAI,SAAQ,AAAE,CAAA,OAAM,iBAAiB,CAAC,CAAG;AACvC,uBAAS,QAAQ,AAAE,CAAA,OAAM,iBAAiB,GAAI,SAAA,UAAS,CAAG,CAAA,OAAM,CAAM;AACpE,yBAAS,IAAI,AAAE,CAAA,kBAAiB,YAAY,CAAG,WAAS,CAAG,KAAG,CAAC,CAAC;cAClE,EAAC,CAAC;YACJ;AAAA,AAEA,kBAAM,mBAAmB,EAAI,mBAAiB,CAAC;UACjD;AAEA,4BAAkB,CAAlB,UAAoB,MAAK,CAAkB;ACvE7C,iBAAK,cAAc,CAAA,MAAA,CDuEU,eAAa,CCvEJ,CAAA;ADwElC,iBAAO,CAAA,SAAQ,AAAE,CAAA,MAAK,CAAC,CAAA,CAAI,CAAA,MAAK,mBAAmB,EAAI,KAAG,CAAC;UAC7D;AAAA,aDtEgE,SAAO,CAAC,CAAC;MACnE,AAAC,CCmB6B,WAAU,CDnBrB,EDJ2C;AKAtE,WAAK,eAAgB,CAAA,gBAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAQ,AAAG,CAAA;AAAC,eAAA,EHyBI,CAAA,eAAc,CAAA,CAAqB,EAAA,iBAAgB,CAAA,CAAA,CGzBhC;QAAC,CAAC,CAAC,CAAC;AADrD,WAAK,eAAe,AAAC,CAAA,gBAAA,UAAA,QAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAS,AAAE,CAAA;AAAC,eAAA,EH+BT,CAAA,cAAa,CAAA,CAAW,EAAA,cAAa,CAAA,CAAW,EAAA,cAAa,CAAA,CAAA,CG/B7B;QAAC,CAAC,CAAC,CAAC;AADrD,WAAK,eAAe,AAAC,CAAA,gBAAA,UAAA,oBAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAS,AAAE,CAAA;AAAC,eAAA,EHsEG,CAAA,cAAa,CAAA,CAAA,CGtEO;QAAC,CAAC,CAAC,CAAC;IRCtB;EAC3B,CAAA;ADDI,CAAC,CAAC;AM4DkC","file":"angular2/src/core/compiler/pipeline/proto_view_builder.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ProtoView} from '../view';\nimport {ChangeDetection} from 'angular2/change_detection';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {ShadowDomStrategy} from '../shadow_dom_strategy';\n\n/**\n * Creates ProtoViews and forwards variable bindings from parent to children.\n *\n * Fills:\n * - (in parent): CompileElement#inheritedElementBinder.nestedProtoView\n * - CompileElement#inheritedProtoView\n *\n * Reads:\n * - (in parent): CompileElement#inheritedProtoView\n * - (in parent): CompileElement#variableBindings\n * - CompileElement#isViewRoot\n */\nexport class ProtoViewBuilder extends CompileStep {\n  changeDetection:ChangeDetection;\n  _shadowDomStrategy:ShadowDomStrategy;\n  constructor(changeDetection:ChangeDetection, shadowDomStrategy:ShadowDomStrategy) {\n    super();\n    this._shadowDomStrategy = shadowDomStrategy;\n    this.changeDetection = changeDetection;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var inheritedProtoView = null;\n    if (current.isViewRoot) {\n      var protoChangeDetector = this.changeDetection.createProtoChangeDetector('dummy');\n      inheritedProtoView = new ProtoView(current.element, protoChangeDetector,\n        this._shadowDomStrategy, this._getParentProtoView(parent));\n\n      if (isPresent(parent)) {\n        if (isPresent(parent.inheritedElementBinder.nestedProtoView)) {\n          throw new BaseException('Only one nested view per element is allowed');\n        }\n        parent.inheritedElementBinder.nestedProtoView = inheritedProtoView;\n\n        // When current is a view root, the variable bindings are set to the *nested* proto view.\n        // The root view conceptually signifies a new \"block scope\" (the nested view), to which\n        // the variables are bound.\n        if (isPresent(parent.variableBindings)) {\n          MapWrapper.forEach(parent.variableBindings, (mappedName, varName) => {\n            inheritedProtoView.bindVariable(varName, mappedName);\n          });\n        }\n      }\n    } else if (isPresent(parent)) {\n      inheritedProtoView = parent.inheritedProtoView;\n    }\n\n    // The view's locals needs to have a full set of variable names at construction time\n    // in order to prevent new variables from being set later in the lifecycle. Since we don't want\n    // to actually create variable bindings for the $implicit bindings, add to the\n    // protoLocals manually.\n    if (isPresent(current.variableBindings)) {\n      MapWrapper.forEach(current.variableBindings, (mappedName, varName) => {\n        MapWrapper.set(inheritedProtoView.protoLocals, mappedName, null);\n      });\n    }\n\n    current.inheritedProtoView = inheritedProtoView;\n  }\n\n  _getParentProtoView(parent:CompileElement) {\n    return isPresent(parent) ? parent.inheritedProtoView : null;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}