{"version":3,"sources":["@traceur/generated/TemplateParser/5368","angular2/test/core/compiler/integration_spec.js","angular2/test/core/compiler/@traceur/generated/TemplateParser/24","angular2/test/core/compiler/@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/5376","@traceur/generated/TemplateParser/5367","@traceur/generated/TemplateParser/5366","@traceur/generated/TemplateParser/5371","@traceur/generated/TemplateParser/5375","@traceur/generated/TemplateParser/5373","@traceur/generated/TemplateParser/5374","@traceur/generated/TemplateParser/7","angular2/test/core/compiler/@traceur/generated/TemplateParser/23"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/integration_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Type, isPresent, BaseException, assertionsEnabled, isJsObject} from 'angular2/src/facade/lang';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\n\nimport {Injector, bind} from 'angular2/di';\nimport {Lexer, Parser, dynamicChangeDetection,\n  DynamicChangeDetection, Pipe, PipeRegistry} from 'angular2/change_detection';\n\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {ShadowDomStrategy, EmulatedUnscopedShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {PrivateComponentLocation} from 'angular2/src/core/compiler/private_component_location';\nimport {PrivateComponentLoader} from 'angular2/src/core/compiler/private_component_loader';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {MockTemplateResolver} from 'angular2/src/mock/template_resolver_mock';\nimport {BindingPropagationConfig} from 'angular2/src/core/compiler/binding_propagation_config';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {CssProcessor} from 'angular2/src/core/compiler/css_processor';\nimport {EventManager} from 'angular2/src/core/events/event_manager';\n\nimport {Decorator, Component, Viewport, DynamicComponent} from 'angular2/src/core/annotations/annotations';\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {Parent, Ancestor} from 'angular2/src/core/annotations/visibility';\nimport {EventEmitter} from 'angular2/src/core/annotations/di';\n\nimport {If} from 'angular2/src/directives/if';\n\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\n\nexport function main() {\n  describe('integration tests', function() {\n    var directiveMetadataReader, shadowDomStrategy, compiler, tplResolver;\n\n    function createCompiler(tplResolver, changedDetection) {\n      var urlResolver = new UrlResolver();\n      return new Compiler(changedDetection,\n        new TemplateLoader(null, null),\n        directiveMetadataReader,\n        new Parser(new Lexer()),\n        new CompilerCache(),\n        shadowDomStrategy,\n        tplResolver,\n        new ComponentUrlMapper(),\n        urlResolver,\n        new CssProcessor(null)\n      );\n    }\n\n    beforeEach( () => {\n      tplResolver = new MockTemplateResolver();\n\n      directiveMetadataReader = new DirectiveMetadataReader();\n\n      var urlResolver = new UrlResolver();\n      shadowDomStrategy = new EmulatedUnscopedShadowDomStrategy(new StyleUrlResolver(urlResolver), null);\n\n      compiler = createCompiler(tplResolver, dynamicChangeDetection);\n    });\n\n    describe('react to record changes', function() {\n      var view, ctx, cd;\n      function createView(pv) {\n        ctx = new MyComp();\n        view = pv.instantiate(null, null);\n\n        view.hydrate(new Injector([\n          bind(Compiler).toValue(compiler),\n          bind(DirectiveMetadataReader).toValue(directiveMetadataReader),\n          bind(ShadowDomStrategy).toValue(shadowDomStrategy),\n          bind(EventManager).toValue(null),\n          PrivateComponentLoader\n        ]), null, null, ctx, null);\n\n        cd = view.changeDetector;\n      }\n\n      it('should consume text node changes', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div>{{ctxProp}}</div>'}));\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          ctx.ctxProp = 'Hello World!';\n\n          cd.detectChanges();\n          expect(DOM.getInnerHTML(view.nodes[0])).toEqual('Hello World!');\n          async.done();\n        });\n      }));\n\n      it('should consume element binding changes', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [id]=\"ctxProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          expect(view.nodes[0].id).toEqual('Hello World!');\n          async.done();\n        });\n      }));\n\n      it('should consume binding to aria-* attributes', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [aria-label]=\"ctxProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Initial aria label';\n          cd.detectChanges();\n          expect(DOM.getAttribute(view.nodes[0], 'aria-label')).toEqual('Initial aria label');\n\n          ctx.ctxProp = 'Changed aria label';\n          cd.detectChanges();\n          expect(DOM.getAttribute(view.nodes[0], 'aria-label')).toEqual('Changed aria label');\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to property names where attr name and property name do not match', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [tabindex]=\"ctxNumProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n          expect(view.nodes[0].tabIndex).toEqual(0);\n\n          ctx.ctxNumProp = 5;\n          cd.detectChanges();\n          expect(view.nodes[0].tabIndex).toEqual(5);\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to camel-cased properties using dash-cased syntax in templates', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<input [read-only]=\"ctxBoolProp\">'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n          expect(view.nodes[0].readOnly).toBeFalsy();\n\n          ctx.ctxBoolProp = true;\n          cd.detectChanges();\n          expect(view.nodes[0].readOnly).toBeTruthy();\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to inner-html', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div inner-html=\"{{ctxProp}}\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Some <span>HTML</span>';\n          cd.detectChanges();\n          expect(DOM.getInnerHTML(view.nodes[0])).toEqual('Some <span>HTML</span>');\n\n          ctx.ctxProp = 'Some other <div>HTML</div>';\n          cd.detectChanges();\n          expect(DOM.getInnerHTML(view.nodes[0])).toEqual('Some other <div>HTML</div>');\n\n          async.done();\n        });\n      }));\n\n      it('should consume directive watch expression change.', inject([AsyncTestCompleter], (async) => {\n        var tpl =\n          '<div>' +\n            '<div my-dir [elprop]=\"ctxProp\"></div>' +\n            '<div my-dir elprop=\"Hi there!\"></div>' +\n            '<div my-dir elprop=\"Hi {{\\'there!\\'}}\"></div>' +\n            '<div my-dir elprop=\"One more {{ctxProp}}\"></div>' +\n          '</div>'\n        tplResolver.setTemplate(MyComp, new Template({inline: tpl, directives: [MyDir]}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          expect(view.elementInjectors[0].get(MyDir).dirProp).toEqual('Hello World!');\n          expect(view.elementInjectors[1].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.elementInjectors[2].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.elementInjectors[3].get(MyDir).dirProp).toEqual('One more Hello World!');\n          async.done();\n        });\n      }));\n\n      it(\"should support pipes in bindings and bind config\", inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<component-with-pipes #comp [prop]=\"ctxProp | double\"></component-with-pipes>',\n            directives: [ComponentWithPipes]\n          }));\n\n\n        var registry = new PipeRegistry({\n          \"double\" : [new DoublePipeFactory()]\n        });\n        var changeDetection = new DynamicChangeDetection(registry);\n        var compiler = createCompiler(tplResolver, changeDetection);\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'a';\n          cd.detectChanges();\n\n          var comp = view.locals.get(\"comp\");\n\n          // it is doubled twice: once in the binding, second time in the bind config\n          expect(comp.prop).toEqual('aaaa');\n          async.done();\n        });\n      }));\n\n      it('should support nested components.', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<child-cmp></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          expect(view.nodes).toHaveText('hello');\n          async.done();\n        });\n      }));\n\n      // GH issue 328 - https://github.com/angular/angular/issues/328\n      it('should support different directive types on a single node', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<child-cmp my-dir [elprop]=\"ctxProp\"></child-cmp>',\n            directives: [MyDir, ChildComp]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          var elInj = view.elementInjectors[0];\n          expect(elInj.get(MyDir).dirProp).toEqual('Hello World!');\n          expect(elInj.get(ChildComp).dirProp).toEqual(null);\n\n          async.done();\n        });\n      }));\n\n      it('should support directives where a binding attribute is not given', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            // No attribute \"el-prop\" specified.\n            inline: '<p my-dir></p>',\n            directives: [MyDir]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          async.done();\n        });\n      }));\n\n      it('should support directives where a selector matches property binding', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<p [id]=\"ctxProp\"></p>',\n            directives: [IdComponent]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'some_id';\n          cd.detectChanges();\n          expect(view.nodes[0].id).toEqual('some_id');\n          expect(view.nodes).toHaveText('Matched on id with some_id');\n\n          ctx.ctxProp = 'other_id';\n          cd.detectChanges();\n          expect(view.nodes[0].id).toEqual('other_id');\n          expect(view.nodes).toHaveText('Matched on id with other_id');\n\n          async.done();\n        });\n      }));\n\n      it('should support template directives via `<template>` elements.', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<div><template some-viewport var-greeting=\"some-tmpl\"><copy-me>{{greeting}}</copy-me></template></div>',\n            directives: [SomeViewport]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          var childNodesOfWrapper = view.nodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          async.done();\n        });\n      }));\n\n      it('should support template directives via `template` attribute.', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<div><copy-me template=\"some-viewport: var greeting=some-tmpl\">{{greeting}}</copy-me></div>',\n          directives: [SomeViewport]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          var childNodesOfWrapper = view.nodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          async.done();\n        });\n      }));\n\n      it('should assign the component instance to a var-', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<p><child-cmp var-alice></child-cmp></p>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.locals).not.toBe(null);\n          expect(view.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          async.done();\n        })\n      }));\n\n      it('should assign two component instances each with a var-', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<p><child-cmp var-alice></child-cmp><child-cmp var-bob></p>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.locals).not.toBe(null);\n          expect(view.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n          expect(view.locals.get('bob')).toBeAnInstanceOf(ChildComp);\n          expect(view.locals.get('alice')).not.toBe(view.locals.get('bob'));\n\n          async.done();\n        })\n      }));\n\n      it('should assign the component instance to a var- with shorthand syntax', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<child-cmp #alice></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.locals).not.toBe(null);\n          expect(view.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          async.done();\n        })\n      }));\n\n      it('should assign the element instance to a user-defined variable', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({inline: '<p><div var-alice><i>Hello</i></div></p>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          expect(view.locals).not.toBe(null);\n\n          var value = view.locals.get('alice');\n          expect(value).not.toBe(null);\n          expect(value.tagName.toLowerCase()).toEqual('div');\n\n          async.done();\n        })\n      }));\n\n\n      it('should assign the element instance to a user-defined variable with camelCase using dash-case', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({inline: '<p><div var-super-alice><i>Hello</i></div></p>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          expect(view.locals).not.toBe(null);\n\n          var value = view.locals.get('superAlice');\n          expect(value).not.toBe(null);\n          expect(value.tagName.toLowerCase()).toEqual('div');\n\n          async.done();\n        })\n      }));\n\n      it('should provide binding configuration config to the component', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<push-cmp #cmp></push-cmp>',\n          directives: [[[PushBasedComp]]]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var cmp = view.locals.get('cmp');\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(1);\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(1);\n\n          cmp.propagate();\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(2);\n          async.done();\n        })\n      }));\n\n      it('should create a component that injects a @Parent', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<some-directive><cmp-with-parent #child></cmp-with-parent></some-directive>',\n          directives: [SomeDirective, CompWithParent]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var childComponent = view.locals.get('child');\n          expect(childComponent.myParent).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        })\n      }));\n\n      it('should create a component that injects an @Ancestor', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: `\n            <some-directive>\n              <p>\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var childComponent = view.locals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        })\n      }));\n\n      it('should create a component that injects an @Ancestor through viewport directive', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: `\n            <some-directive>\n              <p *if=\"true\">\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor, If]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          cd.detectChanges();\n\n          var subview = view.viewContainers[1].get(0);\n          var childComponent = subview.locals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        });\n      }));\n\n      it('should support events', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<div emitter listener></div>',\n          directives: [DecoratorEmitingEvent, DecoratorListeningEvent]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var injector = view.elementInjectors[0];\n\n          var emitter = injector.get(DecoratorEmitingEvent);\n          var listener = injector.get(DecoratorListeningEvent);\n\n          expect(emitter.msg).toEqual('');\n          expect(listener.msg).toEqual('');\n\n          emitter.fireEvent('fired !');\n          expect(emitter.msg).toEqual('fired !');\n          expect(listener.msg).toEqual('fired !');\n\n          async.done();\n        });\n      }));\n\n      it('should support dynamic components', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<dynamic-comp #dynamic></dynamic-comp>',\n          directives: [DynamicComp]\n        }));\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var dynamicComponent = view.locals.get(\"dynamic\");\n          expect(dynamicComponent).toBeAnInstanceOf(DynamicComp);\n\n          dynamicComponent.done.then((_) => {\n            cd.detectChanges();\n            expect(view.nodes).toHaveText('hello');\n            async.done();\n          });\n        });\n      }));\n    });\n\n    if (assertionsEnabled()) {\n\n      function expectCompileError(inlineTpl, errMessage, done) {\n        tplResolver.setTemplate(MyComp, new Template({inline: inlineTpl}));\n        PromiseWrapper.then(compiler.compile(MyComp),\n          (value) => {\n            throw new BaseException(\"Test failure: should not have come here as an exception was expected\");\n          },\n          (err) => {\n            expect(err.message).toEqual(errMessage);\n            done();\n          }\n        );\n      }\n\n      it('should raise an error if no directive is registered for an unsupported DOM property', inject([AsyncTestCompleter], (async) => {\n        expectCompileError(\n          '<div [some-prop]=\"foo\"></div>',\n          'Missing directive to handle \\'some-prop\\' in MyComp: <div [some-prop]=\"foo\">',\n          () => async.done()\n        );\n      }));\n\n      it('should raise an error if no directive is registered for a template with template bindings', inject([AsyncTestCompleter], (async) => {\n        expectCompileError(\n          '<div><div template=\"if: foo\"></div></div>',\n          'Missing directive to handle \\'if\\' in <div template=\"if: foo\">',\n          () => async.done()\n        );\n      }));\n\n      it('should raise an error for missing template directive (1)', inject([AsyncTestCompleter], (async) => {\n        expectCompileError(\n          '<div><template foo></template></div>',\n          'Missing directive to handle: <template foo>',\n          () => async.done()\n        );\n      }));\n\n      it('should raise an error for missing template directive (2)', inject([AsyncTestCompleter], (async) => {\n        expectCompileError(\n          '<div><template *if=\"condition\"></template></div>',\n          'Missing directive to handle: <template *if=\"condition\">',\n          () => async.done()\n        );\n      }));\n\n      it('should raise an error for missing template directive (3)', inject([AsyncTestCompleter], (async) => {\n        expectCompileError(\n          '<div *if=\"condition\"></div>',\n          'Missing directive to handle \\'if\\' in MyComp: <div *if=\"condition\">',\n          () => async.done()\n        );\n      }));\n    }\n  });\n}\n\n\n@DynamicComponent({\n  selector: 'dynamic-comp'\n})\nclass DynamicComp {\n  done;\n  constructor(loader:PrivateComponentLoader, location:PrivateComponentLocation) {\n    this.done = loader.load(HelloCmp, location);\n  }\n}\n\n@Component({\n  selector: 'hello-cmp'\n})\n@Template({\n  inline: \"{{greeting}}\"\n})\nclass HelloCmp {\n  greeting:string;\n  constructor() {\n    this.greeting = \"hello\";\n  }\n}\n\n@Decorator({\n  selector: '[my-dir]',\n  bind: {'dirProp':'elprop'}\n})\nclass MyDir {\n  dirProp:string;\n  constructor() {\n    this.dirProp = '';\n  }\n}\n\n@Component({selector: 'push-cmp'})\n@Template({inline: '{{field}}'})\nclass PushBasedComp {\n  numberOfChecks:number;\n  bpc:BindingPropagationConfig;\n\n  constructor(bpc:BindingPropagationConfig) {\n    this.numberOfChecks = 0;\n    this.bpc = bpc;\n    bpc.shouldBePropagated();\n  }\n\n  get field(){\n    this.numberOfChecks++;\n    return \"fixed\";\n  }\n\n  propagate() {\n    this.bpc.shouldBePropagatedFromRoot();\n  }\n}\n\n@Component()\nclass MyComp {\n  ctxProp:string;\n  ctxNumProp;\n  ctxBoolProp;\n  constructor() {\n    this.ctxProp = 'initial value';\n    this.ctxNumProp = 0;\n    this.ctxBoolProp = false;\n  }\n}\n\n\n@Component({\n  selector: 'component-with-pipes',\n  bind: {\n    \"prop\": \"prop | double\"\n  }\n})\n@Template({\n  inline: ''\n})\nclass ComponentWithPipes {\n  prop:string;\n}\n\n@Component({\n  selector: 'child-cmp',\n  services: [MyService]\n})\n@Template({\n  directives: [MyDir],\n  inline: '{{ctxProp}}'\n})\nclass ChildComp {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Decorator({\n  selector: 'some-directive'\n})\nclass SomeDirective { }\n\n@Component({\n  selector: 'cmp-with-parent'\n})\n@Template({\n  inline: '<p>Component with an injected parent</p>',\n  directives: [SomeDirective]\n})\nclass CompWithParent {\n  myParent: SomeDirective;\n  constructor(@Parent() someComp: SomeDirective) {\n    this.myParent = someComp;\n  }\n}\n\n@Component({\n  selector: 'cmp-with-ancestor'\n})\n@Template({\n  inline: '<p>Component with an injected ancestor</p>',\n  directives: [SomeDirective]\n})\nclass CompWithAncestor {\n  myAncestor: SomeDirective;\n  constructor(@Ancestor() someComp: SomeDirective) {\n    this.myAncestor = someComp;\n  }\n}\n\n@Component({\n  selector: '[child-cmp2]',\n  services: [MyService]\n})\nclass ChildComp2 {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Viewport({\n  selector: '[some-viewport]'\n})\nclass SomeViewport {\n  constructor(container: ViewContainer) {\n    container.create().setLocal('some-tmpl', 'hello');\n    container.create().setLocal('some-tmpl', 'again');\n  }\n}\n\nclass MyService {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\nclass DoublePipe extends Pipe {\n  supports(obj) {\n    return true;\n  }\n\n  transform(value) {\n    return `${value}${value}`;\n  }\n}\n\nclass DoublePipeFactory {\n  supports(obj) {\n    return true;\n  }\n\n  create() {\n    return new DoublePipe();\n  }\n}\n\n@Decorator({\n  selector: '[emitter]',\n  events: {'event': 'onEvent($event)'}\n})\nclass DecoratorEmitingEvent {\n  msg: string;\n  emitter;\n\n  constructor(@EventEmitter('event') emitter:Function) {\n    this.msg = '';\n    this.emitter = emitter;\n  }\n\n  fireEvent(msg: string) {\n    this.emitter(msg);\n  }\n\n  onEvent(msg: string) {\n    this.msg = msg;\n  }\n}\n\n@Decorator({\n  selector: '[listener]',\n  events: {'event': 'onEvent($event)'}\n})\nclass DecoratorListeningEvent {\n  msg: string;\n\n  constructor() {\n    this.msg = '';\n  }\n\n  onEvent(msg: string) {\n    this.msg = msg;\n  }\n}\n\n@Component({\n  selector: '[id]',\n  bind: {'id': 'id'}\n})\n@Template({\n  inline: '<div>Matched on id with {{id}}</div>'\n})\nclass IdComponent {\n  id: string;\n}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)","assert.type.$__placeholder__0)"]}