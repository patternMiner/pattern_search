{"version":3,"sources":["@traceur/generated/TemplateParser/5368","angular2/test/change_detection/parser/locals_spec.js","@traceur/generated/TemplateParser/5376","@traceur/generated/TemplateParser/5367","@traceur/generated/TemplateParser/5366","@traceur/generated/TemplateParser/5371"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,wGAAoB,UAAS,SAAQ;;;;;;;;;;;ACM7C,SAAS,KAAG,CAAC,AAAG;AACrB,WAAQ,AAAC,CAAA,QAAO,GAAI,SAAA;AACd,QAAA,CAAA,MAAK,CAAC;AACV,eAAU,AAAC,EAAA,SAAA,AAAC,CAAK;AACf,aAAK,EAAI,IAAI,OAAM,AAAC,CAAA,IAAG,CACrB,CAAA,UAAS,gBAAgB,AAAE,CAAC,CAAC,CAAA,KAAI,CAAG,QAAM,CAAC,CAAI,EAAA,SAAQ,CAAG,KAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACtE,EAAC,CAAC;AAEF,OAAC,AAAE,CAAA,+BAA8B,GAAG,SAAA,AAAC;AACnC,aAAK,AAAE,CAAA,MAAK,IAAK,AAAC,CAAA,KAAI,CAAC,CAAC,KAAM,AAAC,CAAA,OAAM,CAAC,CAAC;AACvC,aAAK,AAAE,EAAC,SAAA;eAAK,CAAA,MAAK,IAAK,AAAC,CAAA,YAAW,CAAC;QAAA,EAAC,aAAa,AAAE,CAAA,GAAI,OAAM,AAAC,CAAA,aAAY,CAAC,CAAC,CAAC;MAChF,EAAC,CAAC;AAEF,OAAC,AAAE,CAAA,2CAA0C,GAAI,SAAA,CAAK;AACpD,aAAK,AAAE,CAAA,MAAK,SAAU,AAAC,CAAA,KAAI,CAAC,CAAC,KAAK,AAAE,CAAA,IAAG,CAAC,CAAC;AACzC,aAAK,AAAE,CAAA,MAAK,SAAU,AAAC,CAAA,SAAQ,CAAC,CAAC,KAAK,AAAE,CAAA,IAAG,CAAC,CAAC;AAC7C,aAAM,AAAC,CAAA,MAAK,SAAS,AAAE,CAAA,YAAW,CAAC,CAAC,KAAK,AAAE,CAAA,KAAI,CAAC,CAAC;MACnD,EAAC,CAAC;AAEF,OAAC,AAAE,CAAA,6BAA4B,GAAG,SAAA,AAAC,CAAK;AACtC,aAAK,IAAI,AAAE,CAAA,KAAI,CAAG,MAAI,CAAC,CAAC;AACxB,aAAK,AAAE,CAAA,MAAK,IAAI,AAAE,CAAA,KAAI,CAAC,CAAC,KAAM,AAAC,CAAA,KAAI,CAAC,CAAC;MACvC,EAAC,CAAC;AAEF,OAAE,AAAC,CAAA,8DAA6D,GAAI,SAAA;AAClE,aAAK,AAAE,EAAA,SAAA,AAAC;eAAK,CAAA,MAAK,IAAI,AAAE,CAAA,YAAW,CAAG,MAAI,CAAC;QAAA,EAAC,aAAa,AAAC,EAAC,CAAC;MAC9D,EAAC,CAAC;AAEF,OAAC,AAAE,CAAA,oBAAmB,GAAG,SAAA,AAAC,CAAK;AAC7B,aAAK,YAAY,AAAC,EAAC,CAAC;AACpB,aAAK,AAAE,CAAA,MAAK,IAAK,AAAC,CAAA,KAAI,CAAC,CAAC,KAAK,AAAE,CAAA,IAAG,CAAC,CAAC;MACtC,EAAC,CAAC;IACJ,EAAC,CAAA;EACH;ACtCQ,UAAQ,AAAC,cAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,iBAAoB,KAAG,WAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;IAAmB;EAC3B,CAAA;AHDI,CAAC,CAAC;ACsC2B","file":"angular2/test/change_detection/parser/locals_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe, describe, it, xit, iit, expect, beforeEach} from 'angular2/test_lib';\n\nimport {Locals} from 'angular2/src/change_detection/parser/locals';\n\nimport {MapWrapper} from 'angular2/src/facade/collection';\n\nexport function main() {\n  describe('Locals', () => {\n    var locals;\n    beforeEach(() => {\n      locals = new Locals(null,\n        MapWrapper.createFromPairs([['key', 'value'], ['nullKey', null]]));\n    });\n\n    it('should support getting values', () => {\n      expect(locals.get('key')).toBe('value');\n      expect(() => locals.get('notPresent')).toThrowError(new RegExp(\"Cannot find\"));\n    });\n\n    it('should support checking if key is present', () => {\n      expect(locals.contains('key')).toBe(true);\n      expect(locals.contains('nullKey')).toBe(true);\n      expect(locals.contains('notPresent')).toBe(false);\n    });\n\n    it('should support setting keys', () => {\n      locals.set('key', 'bar');\n      expect(locals.get('key')).toBe('bar');\n    });\n\n    it('should not support setting keys that are not present already', () => {\n      expect(() => locals.set('notPresent', 'bar')).toThrowError();\n    });\n\n    it('should clearValues', () => {\n      locals.clearValues();\n      expect(locals.get('key')).toBe(null);\n    });\n  })\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}